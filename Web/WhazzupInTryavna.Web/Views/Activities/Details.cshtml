@model WhazzupInTryavna.Web.ViewModels.Activities.SingleActivityViewModel
@using Microsoft.AspNetCore.Identity
@using WhazzupInTryavna.Data.Models
@inject UserManager<ApplicationUser> UserManager

@if (TempData.ContainsKey("UpdatedActivity"))
{
    <div id="succsesAlert" class="alert alert-success">@this.TempData["UpdatedActivity"]</div>
}

<partial name="_HeroNavMenu" />

@{ ViewData["Title"] = Model.Name; }
<div class="single-recipe-layout1 text-center">
    <div class="ctg-name">@Model.CategoryName</div>
    <h2 class="item-title">
        @ViewData["Title"]
    </h2>
    <div class="text-center">
        <div class="text-center">
            <ul class="entry-meta">
                <li class="single-meta">
                    <i class="far fa-calendar-alt"></i> create on @Model.CreatedOn.ToLocalTime()
                </li>
                <li class="single-meta">
                    <i class="fas fa-user"></i> by
                    <span>
                        @Model.AddedByUserUserName
                    </span>
                </li>
                <li class="single-meta">
                    <ul class="item-rating">
                        <li class="star-fill" data-vote="1"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="2"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="3"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="4"><i class="fas fa-star"></i></li>
                        <li class="star-fill" data-vote="5"><i class="fas fa-star"></i></li>
                        <li><span id="averageVoteValue">@Model.AvgVote.ToString("0.0")</span><span> / 5</span> </li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
    <div class="item-figure text-center">
        <img class="w-50 h-50" src="@Model.CategoryImage" alt="@Model.Name">
    </div>
    <div class="item-feature">
        <ul>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fas fa-map-marker-alt"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div>LOCATION</div>
                            <div class="feature-title"><strong>@Model.Location</strong></div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="far fa-clock"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div>START TIME</div>
                            <div class="feature-title"><strong>@Model.StartTime.ToString("dd - MMMM (dddd) HH:mm")</strong></div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fas fa-hourglass-start"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div>
                                @{
                                    if (Model.StartTime > DateTime.Now)
                                    {
                                        @:TIME TO START
                                    }
                                    else
                                    {
                                        @:ACTIVITY ALREADY STARTED
                                    }
                                }
                            </div>
                            <div class="feature-title">@Model.TimeLeft.Days d @Model.TimeLeft.Hours h @Model.TimeLeft.Minutes m</div>
                        </div>
                    </div>
                </div>
            </li>
            <li>
                <div class="feature-wrap">
                    <div class="media">
                        <div class="feature-icon">
                            <i class="fa fa-list-ol"></i>
                        </div>
                        <div class="media-body space-sm">
                            <div>ACTIVITIES IN THIS CATEGORY</div>
                            <div class="feature-title">@Model.CategoryActivitiesCount</div>
                        </div>
                    </div>
                </div>
            </li>
        </ul>
    </div>
    <div class="making-elements-wrap">
        <div class="container">
            <div class="row">
                @if (Model.Description != null)
                {
                    <div class="item-description text-break">
                        @Model.Description
                    </div>
                }
            </div>
            <div class="container">
                <div class="ingridients-wrap">
                    <div class="item-title"><i class="fas fa-list-ul"></i>Going</div>
                    <label class="item-title">@string.Join(", ", Model.UsersInActivity.Select(x => x.Name))</label>
                    <div>
                        @if (Model.UsersInActivity.Any(x => x.Name == User.Identity.Name))
                        {
                            <a class="btn btn-info" style="margin: 5px" asp-controller="Activities" asp-action="DisJoin" asp-route-id="@Model.Id">DISJOIN</a>
                        }
                        else
                        {
                            <a class="btn btn-info" style="margin: 5px" asp-controller="Activities" asp-action="Join" asp-route-id="@Model.Id">JOIN</a>
                        }
                    </div>
                </div>
                @if (Model.AddedByUserId == UserManager.GetUserId(User))
                {
                    <a class="btn btn-info" style="margin: 5px" asp-controller="Activities" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                    <button type="button" style="margin: 5px" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal">
                        Delete
                    </button>
                    <form method="post" asp-action="Delete" asp-route-id="@Model.Id" id="del">
                    </form>
                }
                <button class="btn btn-primary" style="margin: 5px" onclick="window.print()">Print</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hactivityIdden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hactivityIdden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                Deleting @Model.Name
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <button type="button" onclick="del.submit()" class="btn btn-danger">Yes</button>
            </div>
        </div>
    </div>
</div>

<!-- Votes -->
<form method="post" id="antiForgeryForm"></form>
@section Scripts {
    <script>
        $("li[data-vote]").each(function (el) {
            $(this).click(function() {
                var value = $(this).attr("data-vote");
                var activityId = @Model.Id;
                var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                var data = { activityId: activityId, value: value };
                $.ajax({
                    type: "POST",
                    url: "/api/Votes",
                    data: JSON.stringify(data),
                    headers: {
                        'X-CSRF-TOKEN': antiForgeryToken
                    },
                    success: function(data) {
                        $('#averageVoteValue').html(data.avgVote.toFixed(1));
                    },
                    contentType: 'application/json',
                });
            });
        });
    </script>
    <!--Alert-->
    <script>
        let el = document.getElementById("succsesAlert");
        setTimeout(function () { el.hidden = true }, 3000)
    </script>
}